- action = t("enumerize.status.kind_action.#{params[:status_kind]}")
- title = t "head.title.users.works", profile_name: @user.profile.name, username: @user.username, action: action
- description = meta_description(t("head.meta.description.users.works", profile_name: @user.profile.name, username: @user.username, action: action))
- keywords = meta_keywords(@user.profile.name, @user.username)
- image_url = ann_image_url(@user.profile, :tombo_avatar, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description }, twitter: { description: description }, reverse: true, prefix: false)
- set_page_category "users_works"

= render "users/low_profile_header", user: @user

.p-users-works__subnav.c-subnav
  - %i(watching wanna_watch watched on_hold stop_watching).each do |status_kind|
    = active_link_to user_works_path(@user.username, status_kind), class: "c-subnav__link", class_active: "c-subnav__link--active", active: (status_kind.to_s == params[:status_kind]) do
      .c-subnav__item
        .text-center
          .mb-zp25
            = @user.latest_statuses.count_on(status_kind)
          .small
            = t("enumerize.status.kind.#{status_kind}").truncate(8)

h2.h4.text-center.mt-1
  = t "enumerize.status.kind.#{params[:status_kind]}"

- if @seasons.present?
  .mb-2
    - @seasons.each do |season|
      .mt-1
        h3.h5.font-weight-bold.mb-1.ml-1
          = season.decorate.local_name
        - works = season.works.merge(@works).order(watchers_count: :desc)
        = render "works/grid_small", works: works
    .text-center.mt-1
      = paginate @seasons, window: 2
- else
  = render "application/components/empty", text: t("messages.users.no_works")

= render "application/components/tabbar"

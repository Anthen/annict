- title = t "head.title.episodes.index", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.episodes.index", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "episodes_index"
- breadcrumb :work_episode_list, @work

= render "application/components/navbar"

.p-application__content
  .container.py-1.mb-1
    = render "application/components/breadcrumb"
    .row
      .col-3.pr-0
        = render "works/sidebar", work: @work
      .col-9
        = render "works/subnav", work: @work

        .c-card.mt-1.py-1
          - if @episodes.present?
            c-episode-list inline-template="" :is-signed-in="#{user_signed_in?}" :init-is-tracking-mode="#{params.key?(:tracking)}" :all-episode-ids="#{@episodes.pluck(:id)}" :work-id="#{@work.id}"
              .c-episode-list
                .container.mb-zp5
                  small.u-fake-link v-show="!isTrackingMode" @click="enableTrackingMode"
                    = t "noun.bulk_tracking"
                  small.u-fake-link.mr-zp5 v-show="isTrackingMode" @click="checkAll"
                    = t "verb.check_all"
                  small.u-fake-link v-show="isTrackingMode && !!episodeIds.length" @click="uncheckAll"
                    = t "verb.uncheck_all"
                table.p-episodes-table.table.mb-0
                  thead.small
                    tr
                      th v-show="isTrackingMode"
                      - unless @work.single?
                        th = t "noun.episode_number"
                      th = t "noun.title"
                      th = t "noun.records_count"
                  tbody
                    - @episodes.order(:sort_number).each do |episode|
                      = render "episodes/episode_row", work: @work, episode: episode
                .container.text-right.mt-1 v-show="isTrackingMode"
                  button.btn.btn-secondary.mr-zp5 @click="disableTrackingMode"
                    = t "noun.cancel"
                  button.btn.btn-primary :class="{ 'c-spinner': isTracking }" v-bind="{ disabled: !isTrackable }" @click="track"
                    = icon "pencil-square-o"
                    = t "verb.track"
          - else
            = render "application/components/empty", text: t("messages._empty.no_episodes")

= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/share_button_facebook"
  = render "application/js_templates/share_button_twitter"
  = render "application/js_templates/status_selector"

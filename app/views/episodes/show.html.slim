- title = t "head.title.episodes.show", work_title: @work.decorate.local_title, episode_title_with_number: @episode.decorate.title_with_number
- description = meta_description(t("head.meta.description.episodes.show", work_title: @work.decorate.local_title, episode_title_with_number: @episode.decorate.title_with_number))
- keywords = meta_keywords(@work.decorate.local_title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "episodes_show"

= render "application/components/navbar"

.p-application__content
  .container.py-1.mb-2
    .row
      .col-3.pr-0
        = render "works/sidebar", work: @work
      .col-9
        = render "works/subnav", work: @work
        .c-card.container.py-1.my-1
          .row.align-items-center
            .col-8
              h2
                = link_to @episode.decorate.title_with_number, work_episode_path(@work, @episode), class: "u-text-body"
              - if user_signed_in? && current_user.tracked?(@episode)
                .small
                  = icon "check", class: "mr-zp25"
                  = t "messages.episodes.watched_x_times", records_count: current_user.checkins_count_in(@episode)
            .col-4
              .row
                .col.text-center
                  = @records.count + @current_user_records.count
                  .small
                    | Records
                .col.text-center
                  = @records.with_comment.count + @current_user_records.with_comment.count
                  .small
                    | Comments
          - if @episode.prev_episode.present? || @episode.next_episode.present?
            .row.mt-1
              .col
                - if @episode.prev_episode.present?
                  = link_to work_episode_path(@work, @episode.prev_episode) do
                    = icon "angle-left", class: "mr-zp25"
                    = @episode.prev_episode.decorate.local_number
              .col.text-right
                - if @episode.next_episode.present?
                  = link_to work_episode_path(@work, @episode.next_episode) do
                    = @episode.next_episode.decorate.local_number
                    = icon "angle-right", class: "ml-zp25"

        .c-card.py-1
          - if user_signed_in?
            .container
              = render "records/form", record: @record
              hr
          .container
            - if @user_records.present?
              - if (user_signed_in? && current_user != @record_user) || !user_signed_in?
                h2 = t "messages.records.show.record_by_name", name: @record_user.profile.name
                .c-record-list
                  - @user_records.each do |record|
                    = render "records/record", record: record
                hr
            - if @current_user_records.present?
              h2.h4.text-center.font-weight-bold.my-1
                = t "messages.episodes.your_records"
              .c-record-list
                - @current_user_records.each do |record|
                  = render "records/record", record: record
              hr
            - if @records.with_comment.present?
              h2.h4.text-center.font-weight-bold.my-1
                = (@user_records.present? || @current_user_records.present?) ? t("messages.episodes.comments_by_others") : t("messages.episodes.comments")
              .c-record-list
                - @records.with_comment.each do |record|
                  = render "records/record", record: record
            - else
              = render "application/components/empty", text: t("messages.episodes.no_comments")

= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/like_button"
  = render "application/js_templates/mute_user_button"
  = render "application/js_templates/status_selector"
  = render "application/js_templates/rating_state_label"

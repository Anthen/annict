- title = t "head.title.episodes.show", work_title: @work.decorate.local_title, episode_title: @episode.decorate.local_title, episode_number: @episode.decorate.local_number
- description = meta_description(t("head.meta.description.episodes.show", work_title: @work.decorate.local_title, episode_title: @episode.decorate.local_title, episode_number: @episode.decorate.local_number))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_tag(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { title: title, description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "episodes_show"

= render "works/header", work: @work

.c-card.mb-1.py-1
  .p-episode-title-header
    - if @episode.prev_episode.present?
      = link_to work_episode_path(@work, @episode.prev_episode), class: "p-episode-title-header__prev h3 text-xs-center mb-0" do
        = icon "angle-left"
    .p-episode-title-header__main
      h2.h4
        - if @episode.decorate.local_number.present?
          span.pr-zp5 = @episode.decorate.local_number
        - if @episode.decorate.local_title.present?
          = @episode.decorate.local_title
      - if user_signed_in? && current_user.checkedin?(@episode)
        .small
          = icon "check", class: "mr-zp25"
          = t "messages.episodes.watched_x_times", records_count: current_user.checkins_count_in(@episode)
      .container.mt-zp5
        .row
          .col-xs.text-xs-center.u-lh-sm
            = @records.count + @current_user_records.count
            .small
              | Records
          .col-xs.text-xs-center.u-lh-sm
            = @records.with_comment.count + @current_user_records.with_comment.count
            .small
              | Comments
          .col-xs.text-xs-center.u-lh-sm
            = @episode.avg_rating.presence || "-"
            .small
              | Stars
    - if @episode.next_episode.present?
      = link_to work_episode_path(@work, @episode.next_episode), class: "p-episode-title-header__next h3 text-xs-center mb-0" do
        = icon "angle-right"

.c-card.py-1
  .container
    - if user_signed_in?
      = render "records/form", record: @record
    - else
      = render "application/components/welcome"
  hr
  .container
    - if @user_records.present?
      - if (user_signed_in? && current_user != @record_user) || !user_signed_in?
        h2 = t "messages.records.show.record_by_name", name: @record_user.profile.name
        .c-record-list
          - @user_records.each do |record|
            = render "records/record", record: record
        hr
    - if @current_user_records.present?
      h2.h4.text-xs-center.font-weight-bold.my-1
        = t "messages.episodes.show.your_records"
      .c-record-list
        - @current_user_records.each do |record|
          = render "records/record", record: record
      hr
      h2.h4.text-xs-center.font-weight-bold.my-1 = (@user_records.present? || @current_user_records.present?) ? t("messages.episodes.show.comments_by_others") : t("words.comments")
      - if @records.with_comment.present?
        .c-record-list
          - @records.with_comment.each do |record|
            = render "records/record", record: record
      - else
        p
          = icon "info-circle"
          = t "messages.episodes.show.no_records"

= render "application/components/footer"
= render "application/components/tabbar"

- content_for :js_templates do
  = render "application/js_templates/like_button"
  = render "application/js_templates/mute_user_button"
  = render "application/js_templates/status_selector"

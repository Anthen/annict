- title = t "head.title.reviews.index", profile_name: @user.profile.name, username: @user.username
- description = meta_description t("head.meta.description.reviews.index", profile_name: @user.profile.name, username: @user.username)
- keywords = meta_keywords
- image_url = ann_image_url(@user.profile, :tombo_avatar, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "reviews_index"
- breadcrumb :user_review_list, @user

= render "application/components/navbar", transparent: true
= render "users/low_profile_header", user: @user

.p-application__content
  .container.py-1.mb-1
    = render "application/components/breadcrumb"
    .c-card.px-1
      - if @reviews.present?
        .container
          - @reviews.each do |review|
            .row.py-1.u-underline
              .col-auto
                = link_to work_path(review.work) do
                  = ann_image_tag review.work.work_image, :attachment, size: "70x93", class: "img-fluid img-thumbnail rounded"
              .col
                .small.text-muted.mb-zp25
                  = link_to review.work.decorate.local_title, work_path(review.work), class: "u-text-body"
                h2.h4.mb-1
                  - title = t("messages.reviews.view_review_with_words_count", count: review.body.length)
                  = link_to title, review_path(@user.username, review)
                .small.text-muted
                  = link_to review_path(review.user.username, review), title: local_datetime(review.created_at) do
                    = local_time_ago_in_words(review.created_at)
                  - if review.modified_at.present?
                    .ml-zp5
                      = icon "pencil"
                  span.ml-zp5
                    = "#{review.impressions_count} views"

        - if @reviews.total_pages > 1
          .mb-1.text-center
            = paginate @reviews
      - else
        = render "application/components/empty", text: t("messages._empty.no_reviews")

= render "application/components/footer"

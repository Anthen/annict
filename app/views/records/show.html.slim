- title = t "head.title.records.show", user_name: @user.profile.name, work_title: @work.decorate.local_title, episode_title: @episode.decorate.title_with_number
- description = meta_description(t("head.meta.description.records.show", user_name: @user.profile.name, work_title: @work.decorate.local_title, episode_title: @episode.decorate.local_title))
- keywords = meta_keywords(@work.decorate.local_title)
- image_url = ann_image_tag(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { title: title, description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "records_show"

= render "application/components/navbar"

.container.my-1
  .row
    .col-xs-6.offset-xs-3
      .c-card.py-1
        .p-records-show__work-info.px-1
          .row
            .col-xs.u-flex-grow-0.p-records-show__work-image.pr-0
              = image_tag ann_image_url(@work.work_image, :attachment, size: "280x373"), class: "img-fluid rounded"
            .col-xs
              h1.h2
                = link_to work_path(@work) do
                  = @work.decorate.local_title
              = link_to work_episode_path(@work, @episode) do
                = @episode.decorate.title_with_number
        hr
        .p-records-show__record.px-1
          = render "records/record", record: @record
        hr
        .px-1
          - if user_signed_in?
            .p-records-show__comment-form
              = form_for @comment, url: record_comments_path(@user.username, @record) do |f|
                = render "application/components/error_panel", resource: @comment
                = f.text_area :body, class: "form-control", rows: "5", placeholder: t("messages.comments.comment_form_placeholder")
                .w-100.text-xs-center
                  = f.button class: "btn btn-primary mt-zp5" do
                    = icon "pencil"
                    = t "messages.comments.submit"
            hr
          - if @comments.present?
            - @comments.each do |comment|
              .c-record-comment
                .row
                  .c-record-comment__avatar.col-xs.pr-0.u-flex-grow-0
                    = link_to user_path(comment.user.username) do
                      = ann_image_tag comment.user.profile, :tombo_avatar, size: "50x50", class: "rounded-circle"
                  .col-xs
                    .row.mb-zp5
                      .col-xs
                        = link_to comment.user.profile.name, user_path(comment.user.username)
                      .col-xs
                        .small.text-xs-right
                          = local_time_ago_in_words(comment.created_at)
                    c-body inline-template=""
                      .c-body__content = comment.body
          - else
            = render "application/components/empty", text: t("messages.comments.no_comments")

= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/like_button"

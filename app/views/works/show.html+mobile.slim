- title = t "head.title.works.show", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.works.show", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "works_show"

= render "works/header", work: @work

h2.h4.font-weight-bold.text-center.mt-1.mb-2
  = t "noun.information"
.c-card.py-1.mb-1
  .container
    dl.row.mb-0
      - if locale_ja? && @work.title_kana.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.title_kana"
        dd.col-6
          = @work.title_kana
      - if locale_en? && @work.title_ro.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.title_ro"
        dd.col-6
          = @work.title_ro
      - if locale_en? && @work.title_en.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.title_en"
        dd.col-6
          = @work.title_en
      dt.col-6.text-right
        = t "activerecord.attributes.work.media"
      dd.col-6
        = @work.media.text
      - if @work.decorate.release_season.present?
        dt.col-6.text-right
          = t "noun.release_season"
        dd.col-6
          = @work.decorate.release_season_link
      - if @work.official_site_url.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.official_site_url"
        dd.col-6
          = link_with_domain @work.official_site_url
      - if locale_en? && @work.official_site_url_en.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.official_site_url_en"
        dd.col-6
          = link_with_domain @work.official_site_url_en
      - if @work.wikipedia_url.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.wikipedia_url"
        dd.col-6
          = link_with_domain @work.wikipedia_url
      - if locale_en? && @work.wikipedia_url_en.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.wikipedia_url_en"
        dd.col-6
          = link_with_domain @work.wikipedia_url_en
      - if locale_ja? && @work.sc_tid.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.sc_tid"
        dd.col-6
          = @work.decorate.syobocal_link(@work.sc_tid)
      - if @work.twitter_username.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.twitter_username"
        dd.col-6
          = @work.decorate.twitter_username_link
      - if @work.twitter_hashtag.present?
        dt.col-6.text-right
          = t "activerecord.attributes.work.twitter_hashtag"
        dd.col-6
          = @work.decorate.twitter_hashtag_link

- if @work.decorate.local_synopsis.present?
  .mb-1
    h2.h4.font-weight-bold.text-center.mt-1.mb-2
      = t "activerecord.attributes.work.synopsis"
    .c-card.py-1
      .container
        = @work.decorate.local_synopsis
        .text-right.u-very-small
          span.mr-zp25
            = t("noun.source")
            | :
          = @work.decorate.local_synopsis_source

.mb-1
  h2.h4.text-center.font-weight-bold.mt-1.mb-2
    = t "noun.characters"
  .c-card.p-1
    - cache [I18n.locale, @casts] do
      = render "characters/character_list", casts: @casts.order(:sort_number).first(8)
      - if @casts.length > 8
        = link_to t("messages.works.view_all_n_characters", n: @casts.length), work_characters_path(@work), class: "btn btn-secondary w-100"

.mb-1
  h2.h4.text-center.font-weight-bold.mt-1.mb-2
    = t "noun.staffs"
  .c-card.p-1
    - cache [I18n.locale, @staffs] do
      = render "staffs/staff_list", staffs: @staffs.order(:sort_number).first(8)
      - if @staffs.length > 8
        .mt-1
          = link_to t("messages.works.view_all_n_staffs", n: @staffs.length), work_staffs_path(@work), class: "btn btn-secondary w-100"

.mb-1
  h2.h4.text-center.font-weight-bold.mt-1.mb-2
    = t "noun.episodes"
  .c-card.py-1
    - if @episodes.present?
      - if user_signed_in?
        .mb-zp5.mx-1
          = link_to t("noun.bulk_tracking"), work_episodes_path(@work, tracking: "on"), class: "small"
      table.p-episodes-table.table.mb-0
        tbody
          - @episodes.published.order(:sort_number).first(5).each do |episode|
            = render "episodes/episode_row", work: @work, episode: episode
      - if @episodes.length > 5
        .mt-1.mx-1
          = link_to t("messages.works.view_all_n_episodes", n: @episodes.length), work_episodes_path(@work), class: "btn btn-secondary w-100"
    - else
      = render "application/components/empty", text: t("messages._empty.no_episodes")

- if @series_list.present?
  .mb-2
    h2.h4.text-center.font-weight-bold.mt-1.mb-2
      = t "noun.related_works"
    .c-card.p-1
      - @series_list.each do |series|
        h3.text-center.mb-1
          = t("noun.series_with_name", series_name: series.decorate.local_name)
        = render "series/work_list", series: series, work: @work

= render "application/components/footer"
= render "application/components/tabbar"

- content_for :js_templates do
  = render "application/js_templates/status_selector"

- title = t "head.title.works.show", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.works.show", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "works_show"

= render "works/header", work: @work

.mb-1
  h2.h4.text-center.font-weight-bold.mb-1 = t "noun.information"
  .c-card.p-1
    .row
      .col
        ul.list-unstyled.mb-0
          li.mb-zp5
            = icon "tv", class: "mr-zp5"
            = @work.media.text
          - if @work.decorate.release_season.present?
            li.mb-zp5
              = icon "calendar-o", class: "mr-zp5"
              = @work.decorate.release_season_link
          - if @work.official_site_url.present?
            li.mb-zp5
              = icon "home", class: "mr-zp5"
              = link_to t("activerecord.attributes.work.official_site_url"), @work.official_site_url, target: "_blank"
      .col
        ul.list-unstyled.mb-0
          - if @work.wikipedia_url.present?
            li.mb-zp5
              = icon "link", class: "mr-zp5"
              = link_to t("noun.wikipedia"), @work.wikipedia_url, target: "_blank"
          - if @work.sc_tid.present?
            li.mb-zp5
              = icon "link", class: "mr-zp5"
              = @work.decorate.syobocal_link(t("noun.syobocal"))
          - if@work.twitter_username.present?
            li.mb-zp5
              = icon "twitter", class: "mr-zp5"
              = @work.decorate.twitter_username_link
          - if@work.twitter_hashtag.present?
            li.mb-zp5
              = icon "twitter", class: "mr-zp5"
              = @work.decorate.twitter_hashtag_link

.mb-1
  h2.h4.text-center.font-weight-bold.mb-1 = t "noun.episodes"
  .c-card.p-1
    - if @episodes.present?
      - if user_signed_in?
        .mb-zp5
          = link_to t("noun.bulk_tracking"), work_episodes_path(@work, tracking: "on"), class: "small"
      table.p-episodes-table.table.mb-0
        tbody
          - @episodes.published.order(:sort_number).first(10).each do |episode|
            = render "episodes/episode_row", work: @work, episode: episode
      - if @episodes.length > 10
        .mt-1
          = link_to t("messages.works.view_all_n_episodes", n: @episodes.length), work_episodes_path(@work), class: "btn btn-secondary w-100"
    - else
      = render "application/components/empty", text: t("messages.works.no_episodes")

.mb-1
  h2.h4.text-center.font-weight-bold.mt-1.mb-2 = t "noun.characters"
  .c-card.p-1
    - cache [I18n.locale, @casts] do
      = render "characters/character_list", casts: @casts.order(:sort_number).first(8)
      - if @casts.length > 8
        = link_to t("messages.works.view_all_n_characters", n: @casts.length), work_characters_path(@work), class: "btn btn-secondary w-100"

.mb-2
  h2.h4.text-center.font-weight-bold.my-2 = t "noun.staffs"
  .c-card.p-1
    - cache [I18n.locale, @staffs] do
      = render "staffs/staff_list", staffs: @staffs.order(:sort_number).first(8)
      - if @staffs.length > 8
        .mt-1
          = link_to t("messages.works.view_all_n_staffs", n: @staffs.length), work_staffs_path(@work), class: "btn btn-secondary w-100"

= render "application/components/footer"
= render "application/components/tabbar"

- content_for :js_templates do
  = render "application/js_templates/status_selector"

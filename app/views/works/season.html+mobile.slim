- title = t "head.title.works.season", name: @season.decorate.local_name
- description = meta_description(t("head.meta.description.works.season", name: @season.decorate.local_name))
- keywords = meta_keywords(@season.decorate.local_name)
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description }, reverse: true, prefix: false)
- set_page_category "works_season"

.px-1
  - if user_signed_in?
    .row.align-items-center.py-1
      .col-6
        .dropdown.d-inline-block
          a.dropdown-toggle href="#" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"
            = @season.decorate.local_name
          .dropdown-menu.pre-scrollable.mr-1
            - cache [I18n.locale, @seasons] do
              - @seasons.each do |season|
                - cache [I18n.locale, season] do
                  = link_to season.decorate.local_name, season_works_path(slug: season.slug), class: "dropdown-item"
      .col-6.text-right
        = render "display_option_buttons"
  - else
    .text-center.py-1
      .dropdown.d-inline-block
        a.dropdown-toggle href="#" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"
          = @season.decorate.local_name
        .dropdown-menu.pre-scrollable.mr-1
          - Season.order(sort_number: :desc).each do |season|
            = link_to season.decorate.local_name, season_works_path(slug: season.slug), class: "dropdown-item"

.mb-2
  - if user_signed_in?
    = render "works/#{current_user.setting.display_option_work_list}", works: @works
  - else
    = render "works/list", works: @works
  .text-center
    = paginate @works, window: 2

= render "application/components/footer"
= render "application/components/tabbar"

- content_for :js_templates do
  = render "application/js_templates/status_selector"

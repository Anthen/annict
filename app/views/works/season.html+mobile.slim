- title = t "head.title.works.season", name: @season.local_name
- description = meta_description(t("head.meta.description.works.season", name: @season.local_name))
- keywords = meta_keywords(@season.local_name)
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description }, reverse: true, prefix: false)
- set_page_category "works_season"

.px-1
  .text-center.py-1
    - if @prev_season.present?
      = link_to season_works_path(slug: @prev_season.slug), class: "mr-2" do
        = icon "angle-left", class: "mr-zp5"
        = @prev_season.local_name
    .dropdown.d-inline-block
      a.dropdown-toggle href="#" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"
        = @season.local_name
      .dropdown-menu.pre-scrollable.mr-1
        - @seasons.each do |season|
          = link_to season.local_name, season_works_path(slug: season.slug), class: "dropdown-item"
    - if @next_season.present?
      = link_to season_works_path(slug: @next_season.slug), class: "ml-2" do
        = @next_season.local_name
        = icon "angle-right", class: "ml-zp5"
  - if user_signed_in?
    .text-center.mb-1
      = render "display_option_buttons"

.mb-2
  - if user_signed_in?
    = render "works/#{current_user.setting.display_option_work_list}", works: @works
  - else
    = render "works/list", works: @works
  .text-center
    = paginate @works, window: 2

= render "application/components/footer"
= render "application/components/tabbar"

- content_for :js_templates do
  = render "application/js_templates/status_selector"

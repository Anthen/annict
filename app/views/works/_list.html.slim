- content_for :head do
  script src="https://www.youtube.com/player_api"

- cache [I18n.locale, works] do
  - works.each do |work|
    - cache [I18n.locale, work] do
      .c-card.row.py-1.mb-1
        .col-3.pr-0
          = link_to work_path(work) do
            = ann_image_tag work.work_image, :attachment, size: "250x250", alt: work.decorate.local_title, class: "rounded img-thumbnail w-100"
          - if work.work_image.present?
            .u-very-small.text-right
              = work.work_image.decorate.asin_or_copyright_text
          c-status-selector.mt-zp5 :work-id="#{work.id}"

        .col
          .mb-zp25.u-lh-0
            = work.decorate.media_label
          h3.h2.font-weight-bold.mb-zp25
            = link_to work.decorate.local_title, work_path(work), class: "u-text-body"
          .mb-zp5
            span.font-weight-bold.mr-zp25 = work.watchers_count
            span.text-muted.small Watchers

          - if work.decorate.local_synopsis.present?
            .font-weight-bold.mb-zp25
              = t "activerecord.attributes.work.synopsis"
            .mb-1
              c-omitted-synopsis text="#{work.decorate.local_synopsis(raw: true)}"
              .small.mt-zp5.text-right
                span.mr-zp25
                  = t "noun.source"
                  | :
                = work.decorate.local_synopsis_source

          - cache [I18n.locale, work.pvs.published] do
            - if work.pvs.published.present?
              .font-weight-bold.mb-zp25
                = t "noun.pv"
              .row.mb-1
                - work.pvs.published.order(:sort_number).each do |pv|
                  .col-4.text-center.mb-1
                    - if pv.youtube?
                      c-youtube-modal-player thumbnail-url="#{ann_image_url(pv, :thumbnail, size: "200x113")}" video-id="#{pv.youtube_video_id}" video-title="#{pv.title}" annict-url="#{ENV.fetch('ANNICT_URL')}"
                    - else
                      = link_to pv.url, target: "_blank" do
                        .c-video-thumbnail
                          = ann_image_tag pv, :thumbnail, size: "200x113", class: "img-fluid rounded img-thumbnail"
                          = icon "play-circle-o"
                        .small
                          = pv.title

          - cache [I18n.locale, work.casts.published] do
            - if work.casts.published.present?
              .font-weight-bold.mb-zp25 = t "noun.casts"
              ul.list-inline
                - work.casts.published.order(:sort_number).first(10).each do |cast|
                  - cache [I18n.locale, cast] do
                    li.list-inline-item
                      = cast.character.decorate.name_link
                      | : 
                      = cast.decorate.local_name_with_old_link

          - cache [I18n.locale, work.staffs.published] do
            - if work.staffs.published.present?
              .font-weight-bold.mb-zp25 = t "noun.staffs"
              ul.list-inline
                - work.staffs.published.major.order(:sort_number).each do |staff|
                  - cache [I18n.locale, staff] do
                    li.list-inline-item
                      = "#{staff.decorate.role_name}: "
                      = staff.decorate.local_name_with_old_link
          c-work-friends :work-id="#{work.id}"

- content_for :js_templates do
  = render "application/js_templates/omitted_synopsis"
  = render "application/js_templates/work_friends"
  = render "application/js_templates/youtube_modal_player"

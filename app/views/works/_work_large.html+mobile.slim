.work
  .container
    .work-content
      .basic-info
        .left
          - cache [:work_image, work] do
            .work-image
              = link_to work_path(work) do
                = annict_image_tag(work.item, :tombo_image, size: "100x100", alt: work.title)
            .statistics
              span.watchers-count
                i.fa.fa-eye
                = work.watchers_count
              span.records-count
                i.fa.fa-check
                = work.checkins_count
        .right
          h2 = link_to work.title, work_path(work)
          - if user_signed_in? && user == current_user
            - if params[:controller] == "channel_works" && work.channels.present?
              = render "works/channel_selector", mini: true, work: work
            - else
              = render "status_selector", mini: true, work: work
      - if work.casts.present? || work.staffs.present? || work.work_organizations.with_role(:producer).present?
        .detail
          - if work.casts.present?
            .casts
              .title キャスト
              ul
                - work.casts.published.order(:sort_number).limit(10).each do |cast|
                  - cache cast do
                    li
                      = "#{cast.part}: "
                      = cast.decorate.name_with_old_link
          - if work.staffs.present?
            .staffs
              .title スタッフ
              ul
                - work.staffs.published.major.order(:sort_number).limit(10).each do |staff|
                  - cache staff do
                    li
                      = "#{staff.decorate.role_name}: "
                      = staff.decorate.name_with_old_link
          - if work.work_organizations.with_role(:producer).present?
            .work-organizations
              .title アニメーション制作
              ul
                - work.work_organizations.with_role(:producer).order(:sort_number).each do |wo|
                  - cache wo do
                    li = wo.organization.decorate.name_link
          - if user_signed_in?
            - users = current_user.friends_interested_in(work).includes(:profile).order("latest_statuses.id DESC")
            - if users.present?
              - users_json = render("application/components/work_friends.jbuilder", users: users.limit(15))
              ann-work-friends users="#{users_json}" is-all="#{users.count <= 15}" user-id="#{current_user.id}" work-id="#{work.id}"

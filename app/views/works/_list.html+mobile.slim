- content_for :head do
  script src="https://www.youtube.com/player_api"

- cache [I18n.locale, works] do
  - works.each do |work|
    - cache [I18n.locale, work] do
      .c-card.mb-1.py-1
        .container
          .row.mb-1
            .col-4.pr-0
              = link_to work_path(work), class: "d-inline-block" do
                = ann_image_tag(work.work_image, :attachment, size: "250x250", alt: work.decorate.local_title, class: "rounded img-thumbnail")
              - if work.work_image.present?
                .u-very-small.text-right
                  = work.work_image.decorate.asin_or_copyright_text
            .col-8
              .mb-zp25.u-lh-0
                = work.decorate.media_label
              h3.font-weight-bold.mb-zp25
                = link_to work.decorate.local_title, work_path(work), class: "u-text-body"
              .mb-zp5
                span.font-weight-bold.mr-zp25 = work.watchers_count
                span.text-muted.small Watchers
              c-status-selector :work-id="#{work.id}"

          - if work.decorate.local_synopsis.present?
            .font-weight-bold.mb-zp25
              = t "activerecord.attributes.work.synopsis"
            .mb-1
              c-omitted-synopsis text="#{work.decorate.local_synopsis(raw: true)}"
              .small.mt-zp5.text-right
                span.mr-zp25
                  = t "noun.source"
                  | :
                = work.decorate.local_synopsis_source

          - cache [I18n.locale, work.pvs.published] do
            - pvs = @pvs_data.select { |pd| pd[:work_id] == work.id }.first[:pvs].sort_by { |p| p.sort_number }
            - if pvs.present?
              .font-weight-bold.mb-zp25
                = t "noun.pv"
              .row
                - pvs.each do |pv|
                  .col-6.text-center.mb-1
                    - if pv.youtube?
                      c-youtube-modal-player thumbnail-url="#{ann_image_url(pv, :thumbnail, size: "300x169")}" video-id="#{pv.youtube_video_id}" video-title="#{pv.title}" annict-url="#{ENV.fetch('ANNICT_URL')}" :width="320" :height="180" :is-auto-play="false"
                    - else
                      = link_to pv.url, target: "_blank" do
                        .c-video-thumbnail
                          = ann_image_tag pv, :thumbnail, size: "300x169", class: "img-fluid rounded img-thumbnail"
                          = icon "play-circle-o"
                        .small
                          = pv.title
          
          - cache [I18n.locale, work.casts.published] do
            - casts = @casts_data.select { |cd| cd[:work_id] == work.id }.first[:casts].sort_by { |c| c.sort_number }
            - if casts.present?
              .font-weight-bold.mb-zp25
                = t "noun.casts"
              ul.list-inline.mb-0
                - casts.first(10).each do |cast|
                  - cache [I18n.locale, cast] do
                    li.list-inline-item
                      = cast.character.decorate.name_link
                      | : 
                      = cast.decorate.local_name_with_old_link
          
          - cache [I18n.locale, work.staffs.published] do
            - staffs = @staffs_data.select { |sd| sd[:work_id] == work.id }.first[:staffs].sort_by { |s| s.sort_number }
            - if staffs.present?
              .mt-1
                .font-weight-bold.mb-zp25
                  = t "noun.staffs"
                ul.list-inline.mb-0
                  - staffs.each do |staff|
                    - cache [I18n.locale, staff] do
                      li.list-inline-item
                        = "#{staff.decorate.role_name}: "
                        = staff.decorate.local_name_with_old_link

          - cache [I18n.locale, work.program_details.published] do
            - program_details = @program_details_data.select { |pdd| pdd[:work_id] == work.id }.first[:program_details].sort_by { |s| s.channel_id }
            - if program_details.present?
              .mt-1
                .font-weight-bold.mb-zp25
                  = t "noun.video_services"
              ul.list-inline.mb-1
                - program_details.each do |program_detail|
                  - cache [I18n.locale, program_detail] do
                    li.list-inline-item
                      = link_to program_detail.url, target: "_blank" do
                        span.badge.badge-default
                          = program_detail.channel.name

          c-work-friends :work-id="#{work.id}"

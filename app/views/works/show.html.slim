- title = t "head.title.works.show", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.works.show", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_tag(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { title: title, description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "works_show"

= render "application/components/navbar"

.l-content.container.py-1
  .row
    .col-xs-3.pr-0
      .card.container.py-1
        = render "sidebar", work: @work
    .col-xs-9
      .card
        .container.py-1
          h1
            - if locale_ja?
              = @work.title
            - else
              - if @work.title_en.present?
                = @work.title_en
                small.text-muted
                  = @work.title
              - else
                = @work.title
        = render "subnav", work: @work

      h2.text-xs-center = t "words.episodes"
      .card.mt-1.py-1
        - if @work.episodes.published.present?
          table.p-works-show__episodes.table.mb-0
            tbody
              - @work.episodes.published.order(:sort_number).limit(10).each do |episode|
                tr
                  - if episode.single?
                    td.title
                      = link_to work_episode_path(@work, episode) do
                        = episode.title
                  - else
                    td.number
                      = link_to work_episode_path(@work, episode) do
                        = episode.number
                    td.title
                      - if episode.title.present?
                        = link_to work_episode_path(@work, episode) do
                          = episode.title
                  - if user_signed_in?
                    td.checkins
                      - checkins = current_user.checkins.where(episode_id: episode.id)
                      - if checkins.count > 0
                        i.fa.fa-check
                        - if checkins.count > 1
                          span.badge
                            = checkins.count

      h2.text-xs-center = t "words.characters"
      .p-works-show__characters.card.container.mt-1.py-1
        - if @work.casts.published.present?
          - @work.casts.published.order(:sort_number).limit(9).each_slice(3).each do |casts|
            .characters-row.row
              - casts.each do |cast|
                .col-xs-4
                  .row
                    .character-image.col-xs.pr-0
                      = link_to character_path(cast.character) do
                        = image_tag ann_image_url(cast.character.character_image, :attachment, size: "64x64"), class: "img-fluid rounded"
                    .col-xs
                      .character-name = link_to cast.character.decorate.local_name, character_path(cast.character)
                      .character-cast-name.small
                        span CV: 
                        = link_to cast.decorate.local_name_with_old, person_path(cast.person)

      h2.text-xs-center = t "words.staffs"
      .p-works-show__staffs.card.container.mt-1.py-1
        - if @work.staffs.published.present?
          - @work.staffs.published.order(:sort_number).limit(9).each_slice(3).each do |staffs|
            .staffs-row.row
              - staffs.each do |staff|
                .col-xs-4
                  = staff.decorate.name_with_old_link
                  .small = staff.decorate.role_name

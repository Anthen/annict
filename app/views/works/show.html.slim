- title = t "head.title.works.show", title: @work.decorate.local_title
- description = meta_description(t("head.meta.description.works.show", title: @work.decorate.local_title))
- keywords = meta_keywords(@work.title)
- image_url = ann_image_url(@work.work_image, :attachment, size: "640x")
- set_meta_tags(title: title, description: description, keywords: keywords, og: { description: description, image: image_url }, twitter: { description: description, image: image_url }, reverse: true, prefix: false)
- set_page_category "works_show"
- breadcrumb :work_detail, @work

- content_for :head do
  script src="https://www.youtube.com/player_api"

= render "application/components/navbar"

.p-application__content
  .container.py-1.mb-1
    = render "application/components/breadcrumb"
    .row
      .col-3.pr-0
        = render "sidebar", work: @work
      .col-9
        = render "subnav", work: @work

        - if @work.decorate.local_synopsis.present?
          h2.h4.text-center.my-2.font-weight-bold = t "activerecord.attributes.work.synopsis"
          .c-card.mt-1.p-1
            = @work.decorate.local_synopsis
            .text-right.small
              span.mr-zp25
                = t("noun.source")
                | :
              = @work.decorate.local_synopsis_source

        - if @work.pvs.published.present?
          h2.h4.text-center.my-2.font-weight-bold
            = t "noun.pv"
          .c-card.mt-1.px-1.pt-1
            .row
              - @work.pvs.published.order(:sort_number).each do |pv|
                .col-4.text-center.mb-1
                  - if pv.youtube?
                    c-youtube-modal-player thumbnail-url="#{ann_image_url(pv, :thumbnail, size: "300x169")}" video-id="#{pv.youtube_video_id}" video-title="#{pv.title}" annict-url="#{ENV.fetch('ANNICT_URL')}"
                  - else
                    = link_to pv.url, target: "_blank" do
                      .c-video-thumbnail
                        = ann_image_tag pv, :thumbnail, size: "300x169", class: "img-fluid rounded img-thumbnail"
                        = icon "play-circle-o"
                      .small
                        = pv.title

        h2.h4.text-center.my-2.font-weight-bold = t "noun.characters"
        .c-card.container.mt-1.py-1
          - cache [I18n.locale, @casts] do
            = render "characters/character_list", casts: @casts.first(9)
            - if @casts.length > 9
              .mt-1
                = link_to work_characters_path(@work), class: "btn btn-secondary w-100" do
                  = icon "angle-right"
                  = t "messages.works.view_all_n_characters", n: @casts.length

        h2.h4.text-center.my-2.font-weight-bold = t "noun.staffs"
        .c-card.container.mt-1.py-1
          - cache [I18n.locale, @staffs] do
            = render "staffs/staff_list", staffs: @staffs.first(9)
            - if @staffs.length > 9
              .mt-1
                = link_to work_staffs_path(@work), class: "btn btn-secondary w-100" do
                  = icon "angle-right"
                  = t "messages.works.view_all_n_staffs", n: @staffs.length

        h2.h4.text-center.my-2.font-weight-bold
          = t "noun.video_services"
        .c-card.mt-1.pt-1
          .container
            - Channel.published.with_video_service.each_slice(3).each do |channels|
              .row.mb-1
                - channels.each do |channel|
                  - program_detail = channel.program_details.published.find_by(work: @work)
                  .col-4
                    - if program_detail.present?
                      = link_to channel.name, program_detail.url, class: "btn btn-info w-100", target: "_blank"
                    - else
                      button.btn.btn-outline-info.w-100 type="button" disabled=""
                        = channel.name

        - unless @work.no_episodes?
          h2.h4.text-center.my-2.font-weight-bold = t "noun.episodes"
          .c-card.mt-1.py-1
            - if @episodes.present?
              - if user_signed_in?
                .container.mb-zp5
                  = link_to t("noun.bulk_tracking"), work_episodes_path(@work, tracking: "on"), class: "small"
              table.p-episodes-table.table.mb-0
                thead.small
                  tr
                    - unless @work.single?
                      th = t "noun.episode_number"
                    th = t "noun.title"
                    th = t "noun.records_count"
                tbody
                  - @episodes.first(5).each do |episode|
                    = render "episodes/episode_row", work: @work, episode: episode
              - if @episodes.length > 5
                .px-1.mt-1
                  = link_to work_episodes_path(@work), class: "btn btn-secondary w-100" do
                    = icon "angle-right"
                    = t "messages.works.view_all_n_episodes", n: @episodes.length
            - else
              = render "application/components/empty", text: t("messages._empty.no_episodes")
        
        h2.h4.text-center.my-2.font-weight-bold
          = t "noun.reviews"
        .c-card.container.mt-1
          - if @reviews.present?
            .text-right.pt-1
              = link_to new_work_review_path(@work), class: "btn btn-primary btn-sm" do
                = icon "pencil-square-o", class: "mr-zp25"
                = t "verb.write_review"
          = render "works/review_list", reviews: @reviews

        h2.h4.text-center.my-2.font-weight-bold
          = t "noun.related_items"
        .c-card.container.mt-1.py-zp5
          - if @items.present?
            .text-right.py-zp5
              = link_to new_work_item_path(@work), class: "btn btn-primary btn-sm" do
                = icon "plus", class: "mr-zp25"
                = t "verb.regist_item"
          = render "works/item_list", work: @work, items: @items

        - if @series_list.present?
          h2.h4.text-center.my-2.font-weight-bold = t "noun.related_works"
          .c-card.container.mt-1.py-1
            - @series_list.each do |series|
              h3.text-center.mb-1
                = t("noun.series_with_name", series_name: series.decorate.local_name)
              .px-1
                = render "series/work_list", series: series, work: @work

= render "application/components/footer"

- content_for :js_templates do
  = render "application/js_templates/share_button_facebook"
  = render "application/js_templates/share_button_twitter"
  = render "application/js_templates/status_selector"
  = render "application/js_templates/youtube_modal_player"
